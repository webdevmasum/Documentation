<?php

namespace App\Http\Controllers\Web\Backend\TeamLogo;

use App\Helpers\Helper;
use App\Http\Controllers\Controller;
use App\Models\TeamLogo;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\File;
use Yajra\DataTables\DataTables;

class TeamLogoController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index(Request $request)
    {
        $data = TeamLogo::latest();
        if ($request->ajax()) {
            return DataTables::of($data)
                ->addIndexColumn()

                ->addColumn('status', function ($data) {
                    $status = '';
                    $status .= '<div class="switch-sm icon-state">';
                    $status .= '<label class="switch">';
                    $status .= '<input onclick="showStatusChangeAlert(' . $data->id . ')" type="checkbox" class="form-check-input" id="customSwitch' . $data->id . '" getAreaid="' . $data->id . '" name="status"';

                    // Check if the status is active
                    if ($data->status == "active") {
                        $status .= ' checked';
                    }

                    $status .= '>';
                    $status .= '<span class="switch-state"></span>'; // This is the visual switch
                    $status .= '</label>';
                    $status .= '</div>';
                    $status .= '</div>';

                    return $status;
                })

                ->addColumn('action', function ($data) {

                    return '<div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                                  <a href="' . route('teamlogo.edit',  $data->id) . '" type="button" class="action edit text-success" title="Edit">
                                  <i class="icon-pencil-alt"></i>
                                  </a>&nbsp;
                                  <a href="#" onclick="showDeleteConfirm(' . $data->id . ')" type="button" class="action delete text-danger" title="Delete">
                                  <i class="icon-trash"></i>
                                </a>
                                </div>';
                })

                ->addColumn('image', function ($data) {
                    $url = asset($data->image);
                    return '<img src="' . $url . '" alt="image" width="80px" height="50px" style="margin-left:20px;">';
                })

                ->rawColumns(['status', 'action', 'image'])

                ->make(true);
        }

        return view('backend.layouts.teamlogo.index');
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        return view('backend.layouts.teamlogo.create');
    }



    public function store(Request $request)
    {
        try {
            // Validate incoming data
            $validated = $request->validate([
                'title'     => 'required|string|max:255',
                'sub_title' => 'nullable|string|max:255',
                'image'     => 'required|image|mimes:jpeg,png,jpg,gif,svg|max:2048',
            ]);

            // Handle the image upload using helper function
            $imagePath = null;
            if ($request->hasFile('image')) {
                $imagePath = Helper::fileUpload($request->file('image'), 'teamlogos', $request->title);
            }

            // Create the teamlogo post
            $data = new TeamLogo();
            $data->title        = $request->title;
            $data->sub_title    = $request->sub_title;
            $data->image        = $imagePath;

            $data->save();

            return redirect()->route('teamlogo.index')->with('notify-success', 'teamlogo created successfully');
        } catch (\Exception $e) {
            return redirect()->back()->with('notify-error', 'Something went wrong! ' . $e->getMessage());
        }
    }


    /**
     * Display the specified resource.
     */
    public function show(string $id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(string $id)
    {
        $data = TeamLogo::findOrFail($id);
        return view('backend.layouts.teamlogo.edit', compact('data'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, string $id)
    {
        try {
            // Validate incoming data
            $validated = $request->validate([
                'title' => 'required|string|max:255',
                'sub_title' => 'nullable|string|max:255',
                'image' => 'nullable|image|mimes:jpeg,png,jpg,gif,svg|max:2048',
            ]);

            // Find the existing brand logo
            $data = TeamLogo::findOrFail($id);
            $data->title        = $request->title;
            $data->sub_title    = $request->sub_title;

            // Check if a new image is uploaded
            if ($request->hasFile('image')) {
                // Delete old image if exists
                if ($data->image && File::exists(public_path($data->image))) {
                    File::delete(public_path($data->image));
                }

                // Upload and store new image using helper function
                $data->image = Helper::fileUpload($request->file('image'), 'teamlogo-image', $request->title);
            }

            $data->save();

            return redirect()->route('teamlogo.index')->with('notify-success', 'teamlogo updated successfully');
        } catch (\Exception $e) {
            return redirect()->back()->with('notify-error', 'Something went wrong! ' . $e->getMessage());
        }
    }


    /**
     * Remove the specified resource from storage.
     */
    public function destroy(string $id)
    {
        $data = TeamLogo::findOrFail($id);

        $data->delete();

        return response()->json([
            'success' => true,
            'message' => 'Deleted successfully.',
        ]);
    }


    /**
     * Update the status of a teamlogo.
     *
     * @param \Illuminate\Http\Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function status($id)
    {
        $data = TeamLogo::findOrFail($id);

        if ($data->status == 'active') {
            $data->status = 'inactive';
            $data->save();
            return response()->json([
                'success' => false,
                'message' => 'Unpublished Successfully.',
                'data'    => $data,
            ]);
        } else {
            $data->status = 'active';
            $data->save();
            return response()->json([
                'success' => true,
                'message' => 'Published Successfully.',
                'data'    => $data,
            ]);
        }
    }

}
