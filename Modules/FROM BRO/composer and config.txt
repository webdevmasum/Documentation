step- 1 : composer 
-----------------------------
composer require laravel/socialite


step- 2 : config/services.php 
-----------------------------
//For google login
    'google' => [
        'client_id' => env('GOOGLE_CLIENT_ID'),
        'client_secret' => env('GOOGLE_CLIENT_SECRET'),
        'redirect' => env('GOOGLE_REDIRECT_URI'),
    ],

    //for facebook
    'facebook' => [
        'client_id' => env('FACEBOOK_CLIENT_ID'),
        'client_secret' => env('FACEBOOK_CLIENT_SECRET'),
        'redirect' => env('FACEBOOK_REDIRECT_URI'),
    ],


step- 3 : .env 
-----------------------------
FACEBOOK_CLIENT_ID=
FACEBOOK_CLIENT_SECRET=
FACEBOOK_REDIRECT_URL=http://127.0.0.1:8000/facebook/callback

GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_REDIRECT_URI=http://localhost:8000/api/auth/google/callback




step- 4 : Route
----------------
//Continue with google and facebook login
    Route::post('/social/login', [SocialLoginController::class, 'SocialLogin']);


step- 5 : Controller
----------------------

<?php

namespace App\Http\Controllers\API\Login;

use App\Helpers\Helper;
use App\Models\User;
use Carbon\Carbon;
use Exception;
use GuzzleHttp\Exception\ClientException;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Laravel\Socialite\Facades\Socialite;

class SocialLoginController
{

    public function SocialLogin(Request $request)
    {
        // Custom validation
        $validator = Validator::make($request->all(), [
            'provider' => 'required|in:google,facebook',
            'token' => 'required',
        ]);
    
        // If validation fails, return custom error response using Helper::jsonErrorResponse
        if ($validator->fails()) {
            return Helper::jsonErrorResponse('Validation Failed', 422, ['errors' => $validator->errors()]);
        }
    
        try {
            // provider = google or facebook
            $socialUser = Socialite::driver($request->provider)->stateless()->userFromToken($request->token);
    
            if ($socialUser) {
                // Check if user exists in the database
                $user = User::where('email', $socialUser->getEmail())->first();
    
                if (!$user) {
                    // Generate a random password
                    $password = Str::random(16);
    
                    // Create new user
                    $user = User::create([
                        'name' => $socialUser->getName(),
                        'email' => $socialUser->getEmail(),
                        'avatar' => $socialUser->getAvatar(),
                        'email_verified_at' => Carbon::now(),  // Setting email_verified_at to current time
                        'password' => Hash::make($password),
                        $request->provider . '_id' => $socialUser->getId(), // google_id or facebook_id
                    ]);
                }
    
                // Generate Sanctum Token
                $token = $user->createToken('auth_token')->plainTextToken;
    
                // Return success response using Helper::jsonResponse
                return Helper::jsonResponse(true, "Login Successfully via " . ucfirst($request->provider), 200, [
                    'token' => $token,
                    'user' => $user,
                ]);
            } else {
                return Helper::jsonErrorResponse('Invalid or Expired Token', 422);
            }
        } catch (Exception $e) {
            // Return error response using Helper::jsonErrorResponse in case of exception
            return Helper::jsonErrorResponse('Something went wrong', 500, [$e->getMessage()]);
        }
    }
    
}




step- 6 : postman : Route will be same but change will be provider and token.
------------------------------------------------------------------------------
for google: postman raw 
........................

{
    "provider": "google",
    "token": "ya29.a0AXeO80QM7-_2z76mu8rDN9lZ6VNaqZhpp_cf04vVf4QWvaK6loMFijpInMcNxcm8ONf6zPjd-cjJet5Jl-Qm_hzXQmI-NsbbxH9OreNKndpRouYxfyMjleZErdo5TDogivllJ6Vk3kj0_Jq2iH-lgOeXCEbicOga1tMaCgYKASMSARISFQHGX2MiG87nMxu-BxcFH7pCudcxGg0170"
}



for facebook: postman raw 
........................

{
    "provider": "facebook",
    "token": "EAAPTo1YVUvQBO4c0lMDOqUMHfANVGf5IzhMIH6dMh46NfpectILAV7eZCAe3XlPf4iT64stUNXkJCIcLSsWlqPXwh5cZA0r61gWUR85aG9q2k1iR6WxKAiKSRFkOpcZAEZAGNz6URVAtJFMcGOiv1t5HUDNnA2JqGZCWfPYUsfhf1EStx7tjbEjOcRnCHyvJQ9I9CZCbN6UHGESfHaTZCQPE0mqgI5W44xuob9GouchDfZAedx670ThZAZBoZCKnlIqtC1HJAZDZD"
}