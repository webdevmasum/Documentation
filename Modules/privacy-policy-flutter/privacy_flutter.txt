
**************************
Database:
**************************

    Schema::create('dynamic_pages', function (Blueprint $table) {
        $table->id();
        $table->string( 'page_title' )->nullable();
        $table->string( 'page_slug' )->nullable();
        $table->longText( 'page_content' )->nullable();
        $table->enum('status', ['active', 'inactive'])->default('active')->nullable();
        $table->timestamps();
        $table->softDeletes();
    });

**************************
Model:
**************************

    class DynamicPage extends Model
    {
        use HasFactory,SoftDeletes;

        protected $guarded = [];
    }


**************************
Backend Controller:
**************************


<?php

namespace App\Http\Controllers\Web\Backend\Settings;

use App\Http\Controllers\Controller;
use App\Models\DynamicPage;
use Devrabiul\ToastMagic\Facades\ToastMagic;
use Exception;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Yajra\DataTables\DataTables;

class DynamicPageController extends Controller
{
    /**
     * Display a listing of the dynamic pages.
     *
     * @param Request $request
     */

    public function index(Request $request)
    {
        $data = DynamicPage::latest();
        if ($request->ajax()) {
            return Datatables::of($data)
                ->addIndexColumn()
                ->addColumn('page_title', function ($data) {
                    $page_title       = $data->page_title;
                    $short_page_title = strlen($page_title) > 100 ? substr($page_title, 0, 100) . '...' : $page_title;
                    return '<p>' . $short_page_title . '</p>';
                })
                ->addColumn('page_content', function ($data) {
                    $page_content       = $data->page_content;
                    $short_page_content = strlen($page_content) > 100 ? substr($page_content, 0, 100) . '...' : $page_content;
                    return '<p>' . $short_page_content . '</p>';
                })
                ->addColumn('status', function ($data) {
                    $status = '';
                    $status .= '<div class="form-check form-switch">'; // Bootstrap 5 switch container
                    $status .= '<input
                    class="form-check-input"
                    type="checkbox"
                    role="switch"
                    id="flexSwitch' . $data->id . '"
                    onclick="showStatusChangeAlert(' . $data->id . ')"
                    getAreaid="' . $data->id . '"
                    name="status"';

                    // Check if the status is active
                    if ($data->status == "active") {
                        $status .= ' checked';
                    }

                    $status .= '>';
                    $status .= '</div>';

                    return $status;
                })
                ->addColumn('action', function ($data) {

                    return '<div class="btn-group btn-group-sm" role="group" aria-label="Basic example">

                                <a href="' . route('settings.dynamic-page.edit',  $data->id) . '" type="button" class="btn btn-icon btn-sm bg-success-subtle me-1" title="Edit">
                                  <i class="mdi mdi-pencil-outline fs-14 text-success"></i>
                                 </a>&nbsp;
                                 <a href="#" onclick="showDeleteConfirm(' . $data->id . ')" type="button" class="btn btn-icon btn-sm bg-danger-subtle delete-button" title="Delete">
                                  <i class="mdi mdi-delete fs-14 text-danger"></i>
                                </a>

                                </div>';
                })
                ->rawColumns(['page_title', 'page_content', 'status', 'action'])
                ->filterColumn('page_title', function ($query, $keyword) {
                    $query->where('page_title', 'like', "%{$keyword}%");
                })
                ->filterColumn('page_content', function ($query, $keyword) {
                    $query->where('page_content', 'like', "%{$keyword}%");
                })
                ->make(true);
        }
        return view('backend.layouts.settings.dynamic_page.index');
    }

    /**
     * Show the form for creating a new dynamic page.
     *
     */
    public function create()
    {
        return view('backend.layouts.settings.dynamic_page.create');
    }

    /**
     * Store a newly created dynamic page in the database.
     *
     * @param Request $request
     */
    public function store(Request $request)
    {
        try {
            $validator = Validator::make($request->all(), [
                'page_title' => 'required|string|max:100',
                'page_content' => 'required|string',
            ]);

            // If validation fails, redirect back with errors and input data

            if ($validator->fails()) {
                return redirect()->back()->withErrors($validator)->withInput();
            }

            $data = new DynamicPage();
            $data->page_title = $request->page_title;
            $data->page_slug = Str::slug($request->page_title);
            $data->page_content = $request->page_content;
            $data->save();


            ToastMagic::success('Dynamic Page Created Successfully.');

            return redirect()->route('settings.dynamic-page.index');
        } catch (Exception $e) {

            ToastMagic::warning('Dynamic Page Failed To Create.');

            return redirect()->route('settings.dynamic-page.index');
        }
    }

    /**
     * Show the form for editing the specified dynamic page.
     *
     * @param int $id
     */
    public function edit($id)
    {
        $data = DynamicPage::find($id);
        return view('backend.layouts.settings.dynamic_page.edit', compact('data'));
    }


    /**
     * Update the specified dynamic page in the database.
     *
     * @param Request $request
     * @param int $id
     */
    public function update(Request $request, $id)
    {
        try {
            $validator = Validator::make($request->all(), [
                'page_title' => 'required|string|max:100',
                'page_content' => 'required|string',
            ]);

            // If validation fails, redirect back with errors and input data
            if ($validator->fails()) {
                return redirect()->back()->withErrors($validator)->withInput();
            }

            $data = DynamicPage::findOrFail($id);
            $data->page_title = $request->page_title;
            $data->page_slug = Str::slug($request->page_title);
            $data->page_content = $request->page_content;
            $data->update();

            ToastMagic::success('Dynamic Page Updated Successfully.');
            return redirect()->route('settings.dynamic-page.index');
        } catch (Exception $e) {
            ToastMagic::warning('Dynamic Page Failed To Update.');
            return redirect()->route('settings.dynamic-page.index');
        }
    }

    /**
     * Remove the specified dynamic page from the database.
     *
     * @param int $id
     */
    public function destroy($id)
    {
        $data = DynamicPage::findOrFail($id);
        $data->delete();

        return response()->json([
            'success' => true,
            'message' => 'Deleted successfully.',
        ]);
    }

    /**
     * Change the status of the specified dynamic page.
     *
     * @param int $id
     */
    public function status($id)
    {
        $data = DynamicPage::where('id', $id)->first();
        if ($data->status == 'active') {
            // If the current status is active, change it to inactive
            $data->status = 'inactive';
            $data->save();

            // Return JSON response indicating success with message and updated data
            return response()->json([
                'success' => false,
                'message' => 'Unpublished Successfully.',
                'data' => $data,
            ]);
        } else {
            // If the current status is inactive, change it to active
            $data->status = 'active';
            $data->save();

            // Return JSON response indicating success with a message and updated data.
            return response()->json([
                'success' => true,
                'message' => 'Published Successfully.',
                'data' => $data,
            ]);
        }
    }
}




**************************
Route:
**************************

    //Route for DynamicPageController
    Route::get('/dynamic-page', [DynamicPageController::class, 'index'])->name('settings.dynamic-page.index');
    Route::get('/dynamic-page/create', [DynamicPageController::class, 'create'])->name('settings.dynamic-page.create');
    Route::post('/dynamic-page/store', [DynamicPageController::class, 'store'])->name('settings.dynamic-page.store');
    Route::get('/dynamic-page/edit/{id}', [DynamicPageController::class, 'edit'])->name('settings.dynamic-page.edit');
    Route::post('/dynamic-page/update/{id}', [DynamicPageController::class, 'update'])->name('settings.dynamic-page.update');
    Route::delete('/dynamic-page/delete/{id}', [DynamicPageController::class, 'destroy'])->name('settings.dynamic-page.destroy');
    Route::get('/dynamic-page/status/{id}', [DynamicPageController::class, 'status'])->name('settings.dynamic-page.status');


**************************
View: Index
**************************


@extends('backend.app')

@section('title', 'Dynamic Page')

@push('styles')
    <link href="{{asset('backend/libs/datatables.net-bs5/css/dataTables.bootstrap5.min.css')}}" rel="stylesheet" type="text/css" />
    <link href="{{asset('backend/libs/datatables.net-buttons-bs5/css/buttons.bootstrap5.min.css')}}" rel="stylesheet" type="text/css" />
    <link href="{{asset('backend/libs/datatables.net-keytable-bs5/css/keyTable.bootstrap5.min.css')}}" rel="stylesheet" type="text/css" />
    <link href="{{asset('backend/libs/datatables.net-responsive-bs5/css/responsive.bootstrap5.min.css')}}" rel="stylesheet" type="text/css" />
    <link href="{{asset('backend/libs/datatables.net-select-bs5/css/select.bootstrap5.min.css')}}" rel="stylesheet" type="text/css" />
@endpush


@section('content')
    <div class="container-fluid">

        <div class="py-3 d-flex align-items-sm-center flex-sm-row flex-column">
            <div class="flex-grow-1">
                <h4 class="fs-18 fw-semibold m-0">Dynamic Page</h4>
            </div>

            <div class="text-end">
                <ol class="breadcrumb m-0 py-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">Tables</a></li>
                    <li class="breadcrumb-item active">Data Tables</li>
                </ol>
            </div>
        </div>

        <!-- Datatables  -->
        <div class="row">
            <div class="col-12">
                <div class="card">

                    <div class="card-header d-flex justify-content-between">
                        <h5 class="card-title mb-0">Dynamic Page</h5>
                        <a href="{{ route('settings.dynamic-page.create') }}" class="btn btn-primary">
                            Add New
                        </a>
                    </div>


                    <div class="card-body">
                        <table id="datatable" class="table table-bordered dt-responsive table-responsive nowrap">
                            <thead>
                            <tr>
                                <th>#</th>
                                <th>Page Title</th>
                                <th>Page Content</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                            </thead>
                            <tbody>

                            </tbody>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>
@endsection

@push('scripts')


<script>
    $(document).ready(function() {
        $.ajaxSetup({
            headers: {
                "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content")
            }
        });

        if (!$.fn.DataTable.isDataTable('#datatable')) {
            let dTable = $('#datatable').DataTable({
                // DataTable options
                order: [],
                // lengthMenu: [
                //     [25, 50, 100, 200, 500, -1],
                //     [25, 50, 100, 200, 500, "All"]
                // ],
                processing: true,
                responsive: true,
                serverSide: true,
                language: {
                    processing: `Loading data...`
                },
                pagingType: "full_numbers",
                // dom: "<'row justify-content-between table-topbar'<'col-md-2 col-sm-4 px-0'l><'col-md-2 col-sm-4 px-0'f>>tipr",
                ajax: {
                    url: "{{ route('settings.dynamic-page.index') }}",
                    type: "GET"
                },
                columns: [{
                    data: 'DT_RowIndex',
                    name: 'DT_RowIndex',
                    orderable: false,
                    searchable: false
                },
                    {
                        data: 'page_title',
                        name: 'page_title',
                        orderable: true,
                        searchable: true
                    },
                    {
                        data: 'page_content',
                        name: 'page_content',
                        orderable: true,
                        searchable: true
                    },
                    {
                        data: 'status',
                        name: 'status',
                        orderable: true,
                        searchable: true
                    },
                    {
                        data: 'action',
                        name: 'action',
                        orderable: false,
                        searchable: false
                    }
                ]
            });
        }
    });

    // Status Change Confirm Alert
    function showStatusChangeAlert(id) {
        event.preventDefault();

        Swal.fire({
            title: 'Are you sure?',
            text: 'You want to update the status?',
            icon: 'info',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
        }).then((result) => {
            if (result.isConfirmed) {
                statusChange(id);
            }
        });
    }
    // Status Change
    function statusChange(id) {
        let url = '{{ route('settings.dynamic-page.status', ':id') }}';
        $.ajax({
            type: "GET",
            url: url.replace(':id', id),
            success: function(resp) {
                console.log(resp);
                // Reloade DataTable
                $('#datatable').DataTable().ajax.reload();
                if (resp.success === true) {
                    // show toast message
                    //toastr.success(resp.message);
                    Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "Published Successfully",
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else if (resp.errors) {
                    //toastr.error(resp.errors[0]);
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Something went wrong!",
                        footer: `${resp.errors[0]}`
                    });
                } else {
                    //toastr.error(resp.message);
                    Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "Unpublished Successfully",
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            },
            error: function(error) {
                // location.reload();
            }
        });
    }

    // delete Confirm
    function showDeleteConfirm(id) {
        event.preventDefault();
        Swal.fire({
            title: 'Are you sure you want to delete this record?',
            text: 'If you delete this, it will be gone forever.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
        }).then((result) => {
            if (result.isConfirmed) {
                deleteItem(id);
            }
        });
    }
    // Delete Button
    function deleteItem(id) {
        let url = '{{ route('settings.dynamic-page.destroy', ':id') }}';
        let csrfToken = '{{ csrf_token() }}';
        $.ajax({
            type: "DELETE",
            url: url.replace(':id', id),
            headers: {
                'X-CSRF-TOKEN': csrfToken
            },
            success: function(resp) {
                console.log(resp);
                // Reloade DataTable
                $('#datatable').DataTable().ajax.reload();
                if (resp.success === true) {
                    // show toast message
                    // toastr.success(resp.message);
                    Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "Deleted Successfully",
                        showConfirmButton: false,
                        timer: 1500
                    });

                } else if (resp.errors) {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Something went wrong!",
                        footer: `${resp.errors[0]}`
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Something went wrong!",
                        footer: `${resp.message}`
                    });
                    // toastr.error(resp.message);
                }
            },
            error: function(error) {
                // location.reload();
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Something went wrong!",
                });
            }
        })
    }
</script>

<!-- Datatables js -->
<script src="{{asset('backend/libs/datatables.net/js/jquery.dataTables.min.js')}}"></script>

<!-- dataTables.bootstrap5 -->
<script src="{{asset('backend/libs/datatables.net-bs5/js/dataTables.bootstrap5.min.js')}}"></script>
<script src="{{asset('backend/libs/datatables.net-buttons/js/dataTables.buttons.min.js')}}"></script>

{{--    <!-- buttons.colVis -->--}}
<script src="{{asset('backend/libs/datatables.net-buttons/js/buttons.colVis.min.js')}}"></script>
<script src="{{asset('backend/libs/datatables.net-buttons/js/buttons.flash.min.js')}}"></script>
<script src="{{asset('backend/libs/datatables.net-buttons/js/buttons.html5.min.js')}}"></script>
<script src="{{asset('backend/libs/datatables.net-buttons/js/buttons.print.min.js')}}"></script>

<!-- buttons.bootstrap5 -->
<script src="{{asset('backend/libs/datatables.net-buttons-bs5/js/buttons.bootstrap5.min.js')}}"></script>

<!-- dataTables.keyTable -->
<script src="{{asset('backend/libs/datatables.net-keytable/js/dataTables.keyTable.min.js')}}"></script>
<script src="{{asset('backend/libs/datatables.net-keytable-bs5/js/keyTable.bootstrap5.min.js')}}"></script>

<!-- dataTable.responsive -->
<script src="{{asset('backend/libs/datatables.net-responsive/js/dataTables.responsive.min.js')}}"></script>
<script src="{{asset('backend/libs/datatables.net-responsive-bs5/js/responsive.bootstrap5.min.js')}}"></script>

<!-- dataTables.select -->
<script src="{{asset('backend/libs/datatables.net-select/js/dataTables.select.min.js')}}"></script>
<script src="{{asset('backend/libs/datatables.net-select-bs5/js/select.bootstrap5.min.js')}}"></script>

<!-- Datatable Demo App Js -->
<script src="{{asset('backend/js/pages/datatable.init.js')}}"></script>

@endpush


**************************
View: create
**************************


@extends('backend.app')

@section('title', 'Create Dynamic Page')

@push('styles')
    <style>
        .ck-editor__editable[role="textbox"] {
            min-height: 150px;
        }
    </style>
@endpush

@section('content')
    <div class="container-fluid">

        <div class="py-3 d-flex align-items-sm-center flex-sm-row flex-column">
            <div class="flex-grow-1">
                <h4 class="fs-18 fw-semibold m-0">Dynamic Page Form</h4>
            </div>

            <div class="text-end">
                <ol class="breadcrumb m-0 py-0">
                    <li class="breadcrumb-item"><a href="{{route('dashboard')}}">Home</a></li>
                    <li class="breadcrumb-item active"><a href="{{route('settings.dynamic-page.index')}}">Dynamic Page</a></li>
                </ol>
            </div>
        </div>

        <div class="row">


            <div class="col-12">
                <div class="card">

                    <div class="card-header">
                        <h5 class="card-title mb-0">Dynamic Page</h5>
                    </div><!-- end card header -->

                    <div class="card-body">
                        <form class="" method="POST" action="{{ route('settings.dynamic-page.store') }}"
                              enctype="multipart/form-data">
                            @csrf

                            <div class="mb-3">
                                <label for="title" class="form-label">Title :</label>
                                <input type="text"
                                       class="form-control @error('page_title') is-invalid @enderror"
                                       placeholder="Title" name="page_title" id="page_title"
                                       value="{{old('page_title')}}">
                                @error('page_title')
                                <div style="color: red">{{$message}}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="content" class="form-label f-w-500">Content :</label>
                                <textarea class="form-control @error('page_content') is-invalid @enderror" id="content" name="page_content" rows="5">{{old('page_content')}}</textarea>
                                @error('page_content')
                                <div style="color: red;">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="card-footer text-end">
                                <button class="btn btn-primary" type="submit">Create</button>
                                <a href="{{route('settings.dynamic-page.create')}}" class="btn btn-warning">Cancel</a>
                            </div>
                        </form>

                    </div>
                </div>
            </div>


        </div>

    </div> <!-- container-fluid -->
@endsection

@push('scripts')
    <script>
        ClassicEditor
            .create(document.querySelector('#content'), {
                height: '500px'
            })
            .catch(error => {
                console.error(error);
            });
        ClassicEditor
            .create(document.querySelector('#content1'), {
                height: '500px'
            })
            .catch(error => {
                console.error(error);
            });


        $('.dropify').dropify();



        $(document).ready(function() {
            $('.select2').select2();
        });
    </script>
@endpush



**************************
View: edit
**************************


@extends('backend.app')

@section('title', 'Edit Dynamic Page')

@push('styles')
    <style>
        .ck-editor__editable[role="textbox"] {
            min-height: 150px;
        }
    </style>
@endpush

@section('content')
    <div class="container-fluid">

        <div class="py-3 d-flex align-items-sm-center flex-sm-row flex-column">
            <div class="flex-grow-1">
                <h4 class="fs-18 fw-semibold m-0">Dynamic Page Form</h4>
            </div>

            <div class="text-end">
                <ol class="breadcrumb m-0 py-0">
                    <li class="breadcrumb-item"><a href="{{route('dashboard')}}">Home</a></li>
                    <li class="breadcrumb-item active"><a href="{{route('settings.dynamic-page.index')}}">Dynamic Page</a></li>
                </ol>
            </div>
        </div>

        <div class="row">


            <div class="col-12">
                <div class="card">

                    <div class="card-header">
                        <h5 class="card-title mb-0">Dynamic Page</h5>
                    </div><!-- end card header -->

                    <div class="card-body">
                        <form class="" method="POST" action="{{ route('settings.dynamic-page.update', ['id' => $data->id]) }}"
                              enctype="multipart/form-data">
                            @csrf

                            <div class="mb-3">
                                <label for="title" class="form-label">Title :</label>
                                <input type="text"
                                       class="form-control @error('page_title') is-invalid @enderror"
                                       placeholder="Title" name="page_title" id="page_title"
                                       value="{{ $data->page_title ?? " " }}">
                                @error('page_title')
                                <div style="color: red">{{$message}}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="content" class="form-label f-w-500">Content :</label>
                                <textarea class="form-control @error('page_content') is-invalid @enderror" id="content" name="page_content" rows="5">{{ $data->page_content ?? " " }}</textarea>
                                @error('page_content')
                                <div style="color: red;">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="card-footer text-end">
                                <button class="btn btn-primary" type="submit">Update</button>
                                <a href="{{route('settings.dynamic-page.edit',['id' => $data->id])}}" class="btn btn-warning">Cancel</a>
                            </div>
                        </form>

                    </div>
                </div>
            </div>


        </div>

    </div> <!-- container-fluid -->
@endsection

@push('scripts')
    <script>
        ClassicEditor
            .create(document.querySelector('#content'), {
                height: '500px'
            })
            .catch(error => {
                console.error(error);
            });
        ClassicEditor
            .create(document.querySelector('#content1'), {
                height: '500px'
            })
            .catch(error => {
                console.error(error);
            });


        $('.dropify').dropify();



        $(document).ready(function() {
            $('.select2').select2();
        });
    </script>
@endpush




**************************
Sidebar:
**************************

**************************
Api Route:
**************************

**************************
Api Controller:
**************************

**************************
View:
**************************

**************************
Database:
**************************

**************************
Database:
**************************









